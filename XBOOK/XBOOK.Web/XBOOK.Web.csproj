<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <!--<TargetFramework>netcoreapp2.2</TargetFramework>
    --><!--<AspNetCoreHostingModel>InProcess</AspNetCoreHostingModel>--><!--
    <AspNetCoreHostingModel>OutOfProcess</AspNetCoreHostingModel>
    <TypeScriptToolsVersion>3.1</TypeScriptToolsVersion>-->
    <TargetFramework>netcoreapp2.2</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
  </PropertyGroup>

  <ItemGroup>
    <Compile Remove="wwwroot\uploaded\**" />
    <Content Remove="wwwroot\uploaded\**" />
    <EmbeddedResource Remove="wwwroot\uploaded\**" />
    <None Remove="wwwroot\uploaded\**" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="Reports\Template\AccountDetailReport.repx" />
    <None Remove="Reports\Template\InvoiceReport.repx" />
    <None Remove="Reports\Template\PaymentReceiptReport.repx" />
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Include="Reports\Template\AccountDetailReport.repx" />
    <EmbeddedResource Include="Reports\Template\InvoiceReport.repx" />
    <EmbeddedResource Include="Reports\Template\PaymentReceiptReport.repx" />
  </ItemGroup>

  <!--<ItemGroup>
    <Content Include="ClientApp\.vscode\launch.json" />
    <Content Include="ClientApp\.vscode\settings.json" />
  </ItemGroup>

  <ItemGroup>
    <None Include="ClientApp\.github\ISSUE_TEMPLATE.md" />
    <None Include="ClientApp\.github\PULL_REQUEST_TEMPLATE.md" />
  </ItemGroup>-->

  <ItemGroup>
    <PackageReference Include="AutoMapper.Extensions.Microsoft.DependencyInjection" Version="3.1.0" />
    <PackageReference Include="Microsoft.AspNetCore.App" />
    <PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="2.2.0" />
    <PackageReference Include="Microsoft.AspNetCore.Razor.Design" Version="2.2.0" PrivateAssets="All" />
    <PackageReference Include="Microsoft.OpenApi" Version="1.1.1" />
    <PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="2.2.4" />
    <PackageReference Include="Serilog" Version="2.0.0" />
    <PackageReference Include="Swashbuckle.AspNetCore" Version="5.0.0-rc2" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\XBOOK.Dapper\XBOOK.Dapper.csproj" />
    <ProjectReference Include="..\XBOOK.Report\XBOOK.Report.csproj" />
    <ProjectReference Include="..\XBOOK.Service\XBOOK.Service.csproj" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="ClientApp\src\assets\img\profile\" />
  </ItemGroup>

  <ItemGroup>
    <Compile Update="Reports\Template\AccountDetailReport.cs">
      <DependentUpon>AccountDetailReport.repx</DependentUpon>
    </Compile>
    <Compile Update="Reports\Template\AccountDetailReport.Designer.cs">
      <DependentUpon>AccountDetailReport.repx</DependentUpon>
    </Compile>
    <Compile Update="Reports\Template\InvoiceReport.cs">
      <DependentUpon>InvoiceReport.repx</DependentUpon>
    </Compile>
    <Compile Update="Reports\Template\InvoiceReport.Designer.cs">
      <DependentUpon>InvoiceReport.repx</DependentUpon>
    </Compile>
    <Compile Update="Reports\Template\PaymentReceiptReport.cs">
      <DependentUpon>PaymentReceiptReport.repx</DependentUpon>
    </Compile>
    <Compile Update="Reports\Template\PaymentReceiptReport.Designer.cs">
      <DependentUpon>PaymentReceiptReport.repx</DependentUpon>
    </Compile>
  </ItemGroup>
  
  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <!--<Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />-->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --prod" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr -- --prod" Condition=" '$(BuildServerSideRenderer)' == 'true' " />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
      <DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>
</Project>
